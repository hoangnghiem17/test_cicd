name: CD-Test Pipeline

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    name: deploy-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Vollständiger Git-Verlauf, um Tags pushen zu können

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build image (load locally) with commit SHA tag
      run: |
        docker buildx build \
          --platform linux/amd64 \
          --label org.opencontainers.image.revision=${{ github.sha }} \
          -t ghcr.io/${{ github.repository }}/myapp:${{ github.sha }} \
          . \
          --load

    - name: Run automated tests inside the container
      run: |
        mkdir -p test_results
        docker run --rm \
          -v "${{ github.workspace }}/test_results:/app/test_results" \
          ghcr.io/${{ github.repository }}/myapp:${{ github.sha }} \
          poetry run python scripts/run_automated_tests.py

    - name: Upload Test Results as Artifact
      uses: actions/upload-artifact@v4
      if: always()  # Upload results even if tests fail
      with:
        name: test-results
        path: |
          test_results/binary_results.txt
          test_results/detailed_results.json

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Push Docker image (commit SHA tag)
      run: |
        docker push ghcr.io/${{ github.repository }}/myapp:${{ github.sha }}

    - name: Tag image as latest-tested and push (mutable registry tag)
      run: |
        docker tag ghcr.io/${{ github.repository }}/myapp:${{ github.sha }} ghcr.io/${{ github.repository }}/myapp:latest-tested
        docker push ghcr.io/${{ github.repository }}/myapp:latest-tested
